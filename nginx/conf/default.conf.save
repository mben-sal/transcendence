# server {
#     listen 80;
#     server_name localhost;
    
#     # Rediriger HTTP vers HTTPS
# 	return 301 https://localhost$reqquest_uri;
# }

# server {
#     listen 443 ssl;
#     server_name localhost;

# 	error_log /var/log/nginx/error.log debug;
#     access_log /var/log/nginx/access.log;
#     # Certificats SSL
#     ssl_certificate /etc/nginx/ssl/nginx.crt;
#     ssl_certificate_key /etc/nginx/ssl/nginx.key;
    
#     # Paramètres SSL optimisés
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:10m;
    
#     # Frontend
#     location / {
#         proxy_pass http://frontend:5173;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
    
#     # Backend API
#     location /api/ {
#         proxy_pass http://backend:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
    
#     # Admin Django
#     location /admin/ {
#         proxy_pass http://backend:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
    
#     # Swagger UI
#     location /swagger/ {
#         proxy_pass http://backend:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }
    
#     # Fichiers statiques
#     location /static/ {
#         alias /static/;
#     }
    
#     # Fichiers media
#     location /media/ {
#         alias /media/;
#     }
    
#     # Configuration WebSocket sécurisé (WSS)
#     location /ws/ {
#         proxy_pass http://backend:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

server {
    listen 80;
    server_name localhost;
    return 301 https://localhost$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    
    # Configuration minimale SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Réponse simple pour test
    location / {
        return 200 "SSL is working!";
        add_header Content-Type text/plain;
    }
}
